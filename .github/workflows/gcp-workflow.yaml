on:
  push:
    branches: [ "master" ]

env:
  IMAGE_NAME: reactjs-image-gcp
jobs:
  build-and-push:
    runs-on: ubuntu-latest 
    environment: DOCKER_REPOSITORY
    steps: 
      - name: Checkout Code 
        uses: actions/checkout@v3
      - name: Use with SHA 
        run: | 
          echo "TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Show the TAGS values
        run: |
          echo "TAG value is : ${{ env.TAG }}"
      - name: Login to Docker Registry 
        run: |
          echo "${{ secrets.PASSWORD }}" | docker login -u ${{ secrets.USERNAME }} --password-stdin
      - name: Build Docker Image
        run: docker build -t ${{ secrets.USERNAME }}/${{env.IMAGE_NAME }}:${{ env.TAG }} .
      - name: Push the Docker image 
        run: |
          docker push ${{ secrets.USERNAME }}/${{env.IMAGE_NAME }}:${{ env.TAG }}
      - name: Logout from the Registry
        if: always()
        run: |
          docker logout 
  deploy-service: 
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: GCP
    steps: 
      - name: Checkout Code 
        uses: actions/checkout@v3
      - name: Use with SHA 
        run: | 
          echo "TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Deploy via SSH to GCP VM 
        uses: appleboy/ssh-action@v1.0.0
        with: 
          host: ${{ secrets.GCP_IP }}
          username: ${{ secrets.GCP_USER }}
          key: ${{ secrets.GCP_PRIVATE_KEY }}
          envs: TAG
          script: |
            echo "Current location is $(pwd) "
            echo "Showing down container"
            docker compose down 
            
            echo "Updating the docker compose file ... "
            yq eval '.services.reactjs-srv.image="69966/${{env.IMAGE_NAME }}:${{ env.TAG }}"' -i docker-compose.yaml

            echo "Starting updated container "
            docker compose up -d 
